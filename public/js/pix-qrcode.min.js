class PixQRCode{
  constructor({key,name,city,txid,amount}){
    if(!key)throw new Error("Chave PIX obrigatória!");
    this.key=key;
    this.name=name||"";
    this.city=city||"BRASIL";
    this.txid=txid||"***";
    this.amount=amount?parseFloat(amount).toFixed(2):"0.00";
  }

  createCanvas(){
    if(typeof QRCode==="undefined")throw new Error("QRCode.js não encontrado!");
    const div=document.createElement("div");
    new QRCode(div,{
      text:this.getPayload(),
      width:200,
      height:200
    });
    return div.querySelector("canvas");
  }

  getPayload(){
    const payloadFormatIndicator="000201";
    const merchantAccountInfo=this._formatField("26","0014br.gov.bcb.pix")+this._formatField("01",this.key);
    const merchantCategoryCode="52040000";
    const transactionCurrency="5303986";
    const transactionAmount=this.amount?this._formatField("54",this.amount):"";
    const countryCode="5802BR";
    const merchantName=this._formatField("59",this.name);
    const merchantCity=this._formatField("60",this.city);
    const additionalDataField=this._formatField("62",this._formatField("05",this.txid));

    const payloadWithoutCRC=payloadFormatIndicator+merchantAccountInfo+merchantCategoryCode+transactionCurrency+transactionAmount+countryCode+merchantName+merchantCity+additionalDataField+"6304";

    const crc=this._crc16(payloadWithoutCRC);
    return payloadWithoutCRC+crc;
  }

  _formatField(id,value){
    const len=value.length.toString().padStart(2,"0");
    return id+len+value;
  }

  _crc16(str){
    let crc=0xFFFF;
    for(let i=0;i<str.length;i++){
      crc^=str.charCodeAt(i)<<8;
      for(let j=0;j<8;j++){
        crc=(crc<<1)^(crc&0x8000?0x1021:0);
        crc&=0xFFFF;
      }
    }
    return crc.toString(16).toUpperCase().padStart(4,"0");
  }
}
